{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/engine.io-parser/lib/browser.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/globalThis.browser.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/component-emitter/index.js","../node_modules/socket.io-client/lib/index.js","../node_modules/parseuri/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/node_modules/component-emitter/index.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/socket.io-parser/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/component-emitter/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","__webpack_require__","d","__webpack_exports__","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","exports","protocol","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","next","eachWithIndex","el","cb","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","apply","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","len","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","push","total","process","log","_console","console","arguments","formatArgs","args","this","useColors","namespace","module","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","NODE_ENV","PUBLIC_URL","DEBUG","window","__nwjs","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","obj","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","fn","constructor","debug","Emitter","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","emit","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","globalThis","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","concat","self","Function","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","withCredentials","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","mixin","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","slice","listeners","hasListeners","url","Manager","lookup","cache","managers","uri","io","parsed","source","sameNamespace","nsps","forceNew","multiplex","connect","Socket","re","parts","src","indexOf","m","exec","host","authority","ipv6uri","arrayWithoutHoles","iterableToArray","nonIterableSpread","s","h","w","y","plural","ms","msAbs","name","isPlural","Math","round","val","options","parseFloat","isFinite","long","abs","fmtLong","fmtShort","Buffer","withNativeBuffer","isBuffer","withNativeArrayBuffer","isView","eio","bind","Backoff","has","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","toJSON","prev","alphabet","seed","num","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","parseuri","loc","href","env","selectColor","hash","createDebug","prevTime","_len","_key","enabled","curr","coerce","format","formatter","extend","init","instances","delimiter","newDebug","toNamespace","regexp","default","stack","disable","names","skips","enable","instance","chrome","local","ceil","isNaN","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","product","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","create","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","response","attachEvent","unloadHandler","arraybuffer","start","end","bytes","abv","ii","count","err_cb","bail","proxy","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","value","extra","output","counter","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","array","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","copy","set","byteOffset","BlobBuilderConstructor","bb","part","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","list","factor","pow","rand","random","deviation"],"mappings":"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","file":"static/js/7.6531077d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  } // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nvar globalThis = require('./globalThis');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","module.exports = function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n}();","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  } // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n\n\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = new Array(arguments.length - 1),\n      callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","var _toConsumableArray = require(\"E:\\\\help-main\\\\Helpus\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\nvar globalThis = require('../globalThis');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","var _toConsumableArray = require(\"E:\\\\help-main\\\\Helpus\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n\nvar globalThis = require('../globalThis');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = globalThis.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {};\n\n  if (!this.isReactNative) {\n    opts.agent = this.agent;\n    opts.perMessageDeflate = this.perMessageDeflate; // SSL options for Node.js client\n\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n  }\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}