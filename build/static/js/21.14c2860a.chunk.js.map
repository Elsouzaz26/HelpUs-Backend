{"version":3,"sources":["service/Toast.js","service/Senior.js","service/Groups.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","service/Volunteer.js","Maps/Map.js","service/Distributions.js","containers/Manager/Pages/Distribution/Add.js"],"names":["__webpack_require__","d","__webpack_exports__","Toast","sweetalert2__WEBPACK_IMPORTED_MODULE_0__","Toasty","n","Swal","mixin","toast","position","showConfirmButton","timer","fire","icon","title","Senior","getSenior","_getSenior","Object","E_help_main_Helpus_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_help_main_Helpus_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","instance","get","then","res","console","log","abrupt","sent","stop","apply","this","arguments","getBySeniorName","_getBySeniorName","_callee2","fullName","_context2","concat","_x","editSenior","_editSenior","_callee3","id","data","_context3","put","_x2","_x3","addSenior","_addSenior","_callee4","_context4","post","_x4","getSeniorByCity","_getSeniorByCity","_callee5","city","_context5","_x5","Groups","getGroups","_getGroups","catch","err","getGroupsByDateAndCity","_getGroupsByDateAndCity","date","saveGroups","_saveGroups","kmean","_kmean","getSeniorBygroupId","_getSeniorBygroupId","updateGroup","_updateGroup","_callee6","_context6","status","_x6","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","Volunteer","getVolunteer","_getVolunteer","getByVolunteerName","_getByVolunteerName","editVolunteer","_editVolunteer","addVolunteer","_addVolunteer","getVolunteerByCity","_getVolunteerByCity","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","recompose__WEBPACK_IMPORTED_MODULE_2__","react_google_maps__WEBPACK_IMPORTED_MODULE_3__","MyMapComponent","compose","withProps","googleMapURL","loadingElement","createElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","groups","centroid","lng","isMarkerShown","map","group","radius","options","strokeColor","backgroundColor","Distributions","getDistributions","_getDistributions","saveDistributions","_saveDistributions","renewDistributions","_renewDistributions","AddPage","_useState","useState","_useState2","E_help_main_Helpus_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","seniors","setSeniors","_useState3","_useState4","selectedSenior","setSelectedSenior","_useState5","_useState6","setCity","_useState7","_useState8","kValue","setKvalue","_useState9","_useState10","setDate","_useState11","_useState12","cities","setCities","_useState13","_useState14","isMapShown","setIsMapShown","_useState15","_useState16","response","setResponse","_useState17","_useState18","volunteer","setVolunteer","_useState19","_useState20","history","useHistory","_useState21","_useState22","setGroup","useEffect","users","uniqueChars","E_help_main_Helpus_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Set","user","addressCity","react__WEBPACK_IMPORTED_MODULE_2___default","className","class","_Topbar_TopbarUser__WEBPACK_IMPORTED_MODULE_3__","onChange","e","target","value","filter","senior","background","type","needsMedicalSupply","react_calendar__WEBPACK_IMPORTED_MODULE_6__","onClick","_Maps_Map__WEBPACK_IMPORTED_MODULE_4__","MapMarker","index","key","_id","newGroup","leader","SetVoleneteer","v","t","keys","includes","push"],"mappings":"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","file":"static/js/21.14c2860a.chunk.js","sourcesContent":["import Swal from 'sweetalert2'; \n\nconst Toasty = Swal.mixin({\n  toast: true,\n  position: 'top-end',\n  showConfirmButton: false,\n  timer: 3000,\n})\n\nexport const Toast = {\n  \n  fire(icon, title) {\n    return Toasty.fire({\n      icon: icon,\n      title: title\n    })\n  }\n\n};\n","\nimport {Auth} from \"./Auth\"\nimport { instance } from \"../config/api.config\";\n\n\nexport const Senior = {\n  \n  async getSenior() {\n   \n    return await instance\n      .get(`/roles?data=senior`).then(res=>{\n        console.log(\"response\",res)\n        return res\n      })\n     \n  },\n  async getBySeniorName(fullName) {\n   \n    return await instance\n    .get(`/user?data=${fullName}`).then(res=>{\n      console.log(\"response\",res)\n      return res\n    })\n    },\n  \n      async editSenior(id,data) {\n   \n        return await instance\n          .put(`/updateuser/${id}`,data).then(res=>{\n            console.log(\"response\",res)\n            return res\n          })\n         \n      },\n      async addSenior(data) {\n   \n        return await instance\n          .post(`/signup`,data).then(res=>{\n            console.log(\"response\",res)\n            return res\n          })\n         \n      },\n\n      async getSeniorByCity(city) {\n   \n        return await instance\n          .get(`/userByCity/?city=${city}&role=senior`).then(res=>{\n            console.log(\"response\",res)\n            return res\n          })\n         \n      },\n\n      \n  \n};\n","import { instance } from \"../config/api.config\";\r\n\r\n\r\nexport const Groups = {\r\n  async getGroups() { \r\n     return await instance\r\n      .get(`/getgroup`)\r\n      .then((res) => {\r\n        return res\r\n      }).catch(err => {\r\n        console.log(err)\r\n        return false\r\n      })\r\n  },\r\n  async getGroupsByDateAndCity(city, date) { \r\n    return await instance\r\n     .get(`/getgroupByDateAndCity?city=${city}&date=${date}`)\r\n     .then((res) => {\r\n       return res\r\n     }).catch(err => {\r\n       console.log(err)\r\n       return false\r\n     })\r\n },\r\n  async saveGroups(data) { \r\n    return await instance\r\n     .post(`/saveGroup`, {\r\n         data: data\r\n     })\r\n     .then((res) => {\r\n       return res\r\n     }).catch(err => {\r\n       console.log(err)\r\n       return false\r\n     })\r\n },\r\n async kmean(data) { \r\n    return await instance\r\n     .post(`/kmean`, {data})\r\n     .then((res) => {\r\n       return res\r\n     }).catch(err => {\r\n       console.log(err)\r\n       return false\r\n     })\r\n },\r\n async getSeniorBygroupId(id) { \r\n  console.log(\"newid\",id)\r\n  return await instance\r\n   .get(`/getseniorBygroup?id=${id}`)\r\n   .then((res) => {\r\n     return res\r\n   }).catch(err => {\r\n     console.log(err)\r\n     return false\r\n   })\r\n},\r\n\r\nasync updateGroup(id) { \r\n  console.log(\"newid\",id)\r\n  return await instance\r\n   .put(`/updategroup/${id}`, {status: \"Done\"})\r\n   .then((res) => {\r\n     return res\r\n   }).catch(err => {\r\n     console.log(err)\r\n     return false\r\n   })\r\n},\r\n \r\n};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","\r\nimport {Auth} from \"./Auth\"\r\nimport { instance } from \"../config/api.config\";\r\n\r\n\r\n\r\nexport const Volunteer = {\r\n  \r\n  async getVolunteer() {\r\n   \r\n    return await instance.get(`/roles?data=volenteer`)\r\n     \r\n  },\r\n  async getByVolunteerName(fullName) {\r\n   \r\n    return await instance\r\n    .get(`/user?data=${fullName}`).then(res=>{\r\n      console.log(\"response\",res)\r\n      return res\r\n    })\r\n    },\r\n    async editVolunteer(id,data) {\r\n   \r\n      return await instance\r\n        .put(`/updateuser/${id}`,data).then(res=>{\r\n          console.log(\"response\",res)\r\n          return res\r\n        })\r\n       \r\n    },\r\n    async addVolunteer(data) {\r\n   \r\n      return await instance\r\n        .post(`/signup`,data).then(res=>{\r\n          console.log(\"response\",res)\r\n          return res\r\n        })\r\n       \r\n    },\r\n    async getVolunteerByCity(city) {\r\n   \r\n      return await instance\r\n        .get(`/userByCity/?city=${city}&role=volenteer`).then(res=>{\r\n          console.log(\"response\",res)\r\n          return res\r\n        })\r\n       \r\n    },\r\n};\r\n","import React from \"react\";\nimport { MapMarker } from \"../assets/Icons\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  Circle,\n  InfoWindow \n} from \"react-google-maps\";\n\nconst MyMapComponent = compose(\n  withProps({\n    /**\n     * Note: create and replace your own key in the Google console.\n     * https://console.developers.google.com/apis/dashboard\n     * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n     */\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyC43U2-wqXxYEk1RBrTLdkYt3aDoOxO4Fw&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={18} defaultCenter={{ lat: props.groups[0].centroid[0], lng: props.groups[0].centroid[1] }}>\n    {props.isMarkerShown && props.groups.map((group)=>{\n      \n     return <Circle\n     defaultCenter={{ lat:  +group.centroid[0], lng: +group.centroid[1] }}\n     radius={10}\n     options={\n      {\n        strokeColor: \"#ff0000\",\n        backgroundColor: \"red\"\n      }\n     }\n   />\n    }\n    )}\n  </GoogleMap>\n));\n\nexport default MyMapComponent;\n","import { instance } from \"../config/api.config\";\n\n\nexport const Distributions = {\n  async getDistributions() { \n     return await instance\n      .get(`/getDistributions`)\n      .then((res) => {\n        return res\n      }).catch(err => {\n        console.log(err)\n        return false\n      })\n  },\n  async saveDistributions(data) { \n    return await instance\n     .post(`/saveDistributions`, {\n       data: data\n     })\n     .then((res) => {\n       return res\n     }).catch(err => {\n       console.log(err)\n       return false\n     })\n },\n async renewDistributions(data) { \n  return await instance\n   .post(`/renewDistributions`, {\n     data: data\n   })\n   .then((res) => {\n     return res\n   }).catch(err => {\n     console.log(err)\n     return false\n   })\n}\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport TopbarUser from \"../../../Topbar/TopbarUser\";\r\nimport MyMapComponent from \"../../../../Maps/Map\";\r\nimport { Bell, MapMarker } from \"../../../../assets/Icons\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { Senior } from \"../../../../service/Senior\";\r\nimport { Toast } from \"../../../../service/Toast\";\r\nimport { Distributions } from \"../../../../service/Distributions\";\r\nimport { Groups } from \"../../../../service/Groups\";\r\nimport { Volunteer } from \"../../../../service/Volunteer\";\r\nimport { useHistory } from \"react-router\";\r\nconst AddPage = () => {\r\n\r\n  const [seniors, setSeniors] = useState([]);\r\n  const [selectedSenior, setSelectedSenior] = useState([]);\r\n  const [city, setCity] = useState(\"\")\r\n  const [kValue, setKvalue] = useState(\"\")\r\n  const [date, setDate] = useState(\"\")\r\n  const [cities, setCities] = useState([])\r\n  const [isMapShown, setIsMapShown] = useState(false)\r\n  const [response, setResponse] = useState({})\r\n  const [volunteer, setVolunteer] = useState([])\r\n  const [volunteerId, setVolunteerId] = useState(\"\");\r\n  const history = useHistory()\r\n  const [group, setGroup] = useState([])\r\n\r\n  useEffect(() => {\r\n    Senior.getSenior().then(res => {\r\n      console.log(res.data)\r\n      setSeniors(res.data.users)\r\n      let uniqueChars = [...new Set(res.data.users.map(user => user.addressCity))];\r\n      setCities(uniqueChars)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  const getSeniorList = (e) => {\r\n    setCity(e.target.value)\r\n    getVolunteer(e.target.value)\r\n    setSelectedSenior(seniors.filter(senior => senior.addressCity == e.target.value))\r\n  }\r\n\r\n\r\n  const getVolunteer = (city) => {\r\n    Volunteer.getVolunteerByCity(city).then(res => {\r\n      setVolunteer(res.data.users)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const generateGroup = () => {\r\n    if (selectedSenior.length == 0 || kValue < 1 || date == \"\") {\r\n      return Toast.fire(\"error\", \"Please select senior and enter k value\")\r\n    }\r\n\r\n    Groups.kmean({ senior: selectedSenior, kValue, date, city }).then(res => {\r\n      console.log(\"frontend res\", res)\r\n      setResponse(res.data)\r\n      setGroup(res.data.group)\r\n      console.log(res.data.group)\r\n      setIsMapShown(true)\r\n\r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  const addDistribution = () => {\r\n\r\n    if (group.filter(t => Object.keys(t).includes(\"leader\")).length !== group.length || city == \"\" || date == \"\") {\r\n      return Toast.fire(\"error\", \"Please select Volunteer\")\r\n    }\r\n\r\n    Distributions.saveDistributions({ date, city, group }).then(res => {\r\n      console.log(\"dis\", res)\r\n      history.push(\"/manager/distribution/view\")\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const SetVoleneteer = (value, index) => {\r\n    console.log(value, index)\r\n    let newGroup = group\r\n    newGroup[index].leader = value\r\n    setGroup(newGroup)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\" clearfix mt-0 mb-2\">\r\n        <span class=\" float-left col-6\">\r\n          {\" \"}\r\n          <h4>Add Distribution </h4>{\" \"}\r\n        </span>\r\n        <span className=\"text-right\">\r\n          {\" \"}\r\n          <TopbarUser />\r\n        </span>\r\n\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <div className=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label className=\"labels\">\r\n              Select a city where you want to delivery for this group\r\n            </label>\r\n\r\n            <select\r\n              class=\"form-control bgColForm\"\r\n              id=\"exampleFormControlSelect1\"\r\n              onChange={getSeniorList}\r\n            >\r\n\r\n              <option value=\"\">Choose City</option>\r\n              {\r\n                cities.map(city => {\r\n                  return <option value={city}>{city}</option>\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"mt-5 pt-5\"></div>\r\n          <div className=\"mt-4\">\r\n            List Senior adress that are on this city :<b>{city}</b>{\" \"}\r\n          </div>\r\n          <div className=\"card\" style={{ background: \"#E5E5E5\" }}>\r\n\r\n            {\r\n              selectedSenior.map(senior => {\r\n                return <a>\r\n                  <div class=\"clearfix\">\r\n                    <div\r\n                      type=\"button\"\r\n                      class=\"btn btn-transparent border-0 float-left\"\r\n                    >\r\n                      <i> {senior.fullName} {senior.addressCity}</i>\r\n                    </div>\r\n                    <div\r\n                      type=\"button\"\r\n                      class=\"btn btn-transparent border-0 float-right text-primary\"\r\n                    >\r\n                      <i> {senior.needsMedicalSupply ? \"Needs Medical supply\" : senior.needsMedicalSupply ? \"needs Food Supply\" : \"\"}</i>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              })\r\n            }\r\n\r\n\r\n          </div>\r\n          <div className=\"text-danger\">Please select a city first </div>\r\n          <div className=\"mt-2\">\r\n            <h6>Assign a date to this group</h6>\r\n          </div>\r\n          <div className></div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <Calendar onChange={setDate} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <div className=\"mt-5 p-2\" style={{ background: \"#c4c4c4\" }}>\r\n            <div className=\"row \">\r\n              <div className=\"col-9 d-flex justify-content-center\">\r\n                <h6 className=\"mt-4\">\r\n                  {\" \"}\r\n                  How many Voleenteer do you need to allocate\r\n                </h6>\r\n              </div>\r\n              <div className=\"col-2    d-flex justify-content-center mr-1 p-0\">\r\n                <h1 className=\"mt-2\">\r\n                  <input type=\"number\" className=\"w-100 h-100\" onChange={(e) => setKvalue(e.target.value)}></input>\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h6>\r\n              This is the{\" \"}\r\n              <b>\r\n                <u>K value</u>\r\n              </b>{\" \"}\r\n              of Kmeans algorithm\r\n            </h6>\r\n          </div>\r\n\r\n          <div className=\"row p-5\">\r\n            <div className=\"col p-2 d-flex justify-content-center rounded\">\r\n              <button className=\"btn btn-primary\" onClick={generateGroup}>\r\n                See on the map the repartition of groups generated\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {\r\n            isMapShown ?\r\n              <div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                  <div className=\"col-md-10\">\r\n\r\n                    <MyMapComponent isMarkerShown groups={response.group} />\r\n\r\n                    <div className=\"row mt-4  d-flex justify-content-center\">\r\n                      <span>{MapMarker}</span>{\" \"}\r\n                      <h6 className=\"ml-1 mt-1\">Groups generated with the K value</h6>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <h6>Assigned each group to a volunteer in this city</h6>\r\n                </div>\r\n                <div className=\"card p-2\" style={{ background: \"#E5E5E5\" }}>\r\n                  <a>\r\n                    <div class=\"clearfix\">\r\n                      <div\r\n                        type=\"button\"\r\n                        class=\"btn btn-transparent border-0 float-left\"\r\n                      >\r\n                        {response.group.map((res,index)=>{\r\n                        return (<div className=\"row\"  key={index}>\r\n\r\n                            <div className=\"col-6\">\r\n                              <label>\r\n                              Group Id :{res._id}\r\n                            </label>\r\n\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                            <select className=\"form-control\" onChange={(e) => SetVoleneteer(e.target.value, index) }>\r\n                          <option value=\"\">Choose Voleenteer in city</option>\r\n                          {\r\n                            volunteer.map(v => {\r\n                              return  <option value={v._id}>{v.fullName}</option>\r\n\r\n                            })\r\n                          }\r\n                        </select>\r\n\r\n                            </div>\r\n\r\n                              \r\n                        </div>\r\n                        )\r\n                        })\r\n                      }\r\n                        {/* {response.group.map(res=>{\r\n                          return <div>\r\n                          <i className=\"p-3\">{res._id}</i>\r\n                          <div class=\"dropdown float-right \">\r\n                        <select className=\"form-control\" onChange={(e) => setVolunteerId(e.target.value) }>\r\n                          <option value=\"\">Choose Voleenteer in city</option>\r\n                          {\r\n                            volunteer.map(v => {\r\n                              return  <option value={v._id}>{v.fullName}</option>\r\n\r\n                            })\r\n                          }\r\n                        </select>\r\n                      </div>\r\n                          </div>\r\n                        })} */}\r\n\r\n                      </div>\r\n\r\n                    </div>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n              : null\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n      {\r\n        isMapShown ?\r\n          <div className=\"row  d-flex justify-content-center mb-4 mt-4\">\r\n            <div className=\"col-md-6 p-2 border border-primary bg-light d-flex justify-content-center  rounded\">\r\n              <button className=\"btn btn-primary\" onClick={addDistribution}>\r\n                Generate groups and redirect to distribution list\r\n              </button>\r\n            </div>\r\n          </div>\r\n          : null\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPage;\r\n"],"sourceRoot":""}